@model GameStore.PL.ViewModels.CardsVM;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart Page</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: "Helvetica Neue", Arial, sans-serif;
            color: #333;
            background-color: #fff;
        }

        .container {
            max-width: 1100px;
            margin: 0 auto;
            padding: 20px;
        }

        h1 {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 30px;
            color: #0071f8;
            text-align: center;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        table th, table td {
            text-align: left;
            padding: 15px;
            border-bottom: 1px solid #ddd;
        }

        table th {
            font-weight: bold;
            text-transform: uppercase;
            color: #555;
            font-size: 0.9rem;
        }

        table img {
            width: 80px;
            height: auto;
            border-radius: 8px;
        }

        .item-name {
            font-size: 1rem;
            font-weight: 600;
            color: #333;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            justify-content: center;
            border: 1px solid #ccc;
            border-radius: 8px;
            overflow: hidden;
            width: 90px;
        }

        .quantity-control button {
            background: #0071f8;
            color: #fff;
            padding: 8px 10px;
            border: none;
            cursor: pointer;
            font-size: 1rem;
            transition: all 0.3s;
        }

        .quantity-control button:hover {
            background-color: #005bb5;
        }

        .quantity-control span {
            flex: 1;
            text-align: center;
            font-size: 1rem;
            pointer-events: none;
            color: #0071f8;
            font-weight: bold;
        }

        .remove-btn {
            color: #e74c3c;
            font-size: 1.2rem;
            background: none;
            border: none;
            cursor: pointer;
            transition: color 0.3s;
        }

        .remove-btn:hover {
            color: #c0392b;
        }

        .cart-summary {
            margin-top: 30px;
            padding: 30px 20px;
            border-radius: 12px;
            background-color: #fff;
            color: #333;
            text-align: center;
            font-size: 1.2rem;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            position: relative;
        }

        .cart-summary::before {
            content: "\f1b2"; /* Game Controller Icon */
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
            font-size: 2rem;
            color: #0071f8;
            position: absolute;
            top: -30px;
            left: 50%;
            transform: translateX(-50%);
            background: #fff;
            padding: 10px;
            border-radius: 50%;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        }

        .cart-summary h3 {
            margin: 10px 0;
            font-size: 1.5rem;
            color: #555;
        }

        .cart-summary .total-price {
            font-size: 2.5rem;
            font-weight: bold;
            margin-top: 10px;
            color: #e67e22;
        }

        .btn {
            display: inline-block;
            background-color: #0071f8;
            color: #fff;
            text-decoration: none;
            padding: 14px 28px;
            font-size: 1.2rem;
            border-radius: 50px;
            margin-top: 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        .btn:hover {
            background-color: #005bb5;
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
<br><br><br><br><br><br><br><br><br><br><br><br>
<div class="container">
    <table>
        <thead>
        <tr>
            <th>Item</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Cards)
        {
        <tr data-game-id="@item.GameId">
            <td>
                <img src="~/Uploads/@item.ImageUrl" alt="Product Image">
                <span class="item-name">@item.Title</span>
            </td>
            <td>@item.NewPrice</td>
            <td>
                <div class="quantity-control">
                    <button><i class="fas fa-minus"></i></button>
                    <span>@item.Quantity</span>
                    <button><i class="fas fa-plus"></i></button>
                </div>
            </td>
            <td>@(item.Quantity * item.NewPrice)</td>
            <td><button class="remove-btn"><i class="fas fa-trash"></i></button></td>
        </tr>
        }
        </tbody>
    </table>
    <br> <br> <br>
    <div class="cart-summary">
        <h3>Subtotal: $289.99</h3>
        <h3>Shipping: Add Info</h3>
        <p class="total-price">Grand Total: $294.94</p>
        <a href="#" class="btn">Proceed to Checkout</a>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const removeButtons = document.querySelectorAll(".remove-btn");

        removeButtons.forEach(button => {
            button.addEventListener("click", function (e) {
                e.preventDefault();

                const row = this.closest("tr");
                const gameId = row.getAttribute("data-game-id");

                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to remove this item from your cart?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#0071f8',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, remove it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/Card/Remove`, {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                                "X-Requested-With": "XMLHttpRequest"
                            },
                            body: JSON.stringify({ gameId: gameId })
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    row.remove();
                                    updateTotals();
                                    Swal.fire('Removed!', 'The item has been removed from your cart.', 'success');
                                } else {
                                    Swal.fire('Error!', data.message || 'An error occurred while removing the item.', 'error');
                                }
                            })
                            .catch(error => {
                                console.error("Error:", error);
                                Swal.fire('Error!', 'Something went wrong. Please try again later.', 'error');
                            });
                    }
                });
            });
        });

        function updateTotals() {
            let total = 0;
            document.querySelectorAll("tbody tr").forEach(row => {
                const totalCell = row.querySelector("td:nth-child(4)");
                if (totalCell) {
                    const itemTotal = parseFloat(totalCell.textContent.trim());
                    total += itemTotal;
                }
            });

            const grandTotal = document.querySelector(".total-price");
            if (grandTotal) {
                grandTotal.textContent = `Grand Total: $${total.toFixed(2)}`;
            }
        }
    });
</script>
</body>
</html>
